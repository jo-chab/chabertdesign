<div class="dashboard-main">    <div class="dashboard-title">Ajouter des images</div>        <div class="dashboard-content">                        <form method="post" action="action_project_img-placement" enctype="multipart/form-data">                        <ul class="list-img-project" id="sortable-list">                <?php                    $stmt = $db->prepare('SELECT url, id_image from images order by id_image DESC');                    $stmt->execute();                                        $results = $stmt->fetchAll(PDO::FETCH_ASSOC);                                        foreach ($results as $result) {                        $id_image = $result['id_image'];                        $img = urldecode($result['url']);                        echo "                        <li class='img-project-el' draggable='true' data-imageId='$id_image'>                            <img src='$img' width='' height='' alt='' />                        </li>                        ";                    }                ?>            </ul>                        <div class="btn-primary btn-confirm small icon mobile-icon-only"><span>Mettre a jour</span></div>                </form>                </div></div><script>    document.addEventListener("DOMContentLoaded", function () {        const sortableList = document.getElementById("sortable-list");        // Enable drag-and-drop for the list items        for (const listItem of sortableList.querySelectorAll(".img-project-el")) {            listItem.addEventListener("dragstart", (e) => {                e.dataTransfer.setData("text/plain", listItem.innerHTML);                e.dataTransfer.effectAllowed = "move";                listItem.classList.add("dragging");            });            listItem.addEventListener("dragend", () => {                listItem.classList.remove("dragging");                updateImagePlacement();            });        }        // Enable sorting via drag-and-drop        sortableList.addEventListener("dragover", (e) => {            e.preventDefault();            const target = getDragAfterElement(sortableList, e.clientY);            const draggingElement = document.querySelector(".img-project-el.dragging");            if (!target) return;            if (target === draggingElement) return;            // Reorder the list items            sortableList.insertBefore(draggingElement, target);        });        function getDragAfterElement(container, y) {            const draggableElements = [...container.querySelectorAll(".img-project-el:not(.dragging)")];            return draggableElements.reduce((closest, child) => {                const box = child.getBoundingClientRect();                const offset = y - box.top - box.height / 2;                if (offset < 0 && offset > closest.offset) {                    return {offset, element: child};                } else {                    return closest;                }            }, {offset: Number.NEGATIVE_INFINITY}).element;        }    });</script>